{
  "name": "finances-tracker",
  "nodes": [
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "cd18cbd7-4771-4d81-878f-c79471ada2a7",
                    "leftValue": "={{ $json.message.photo[0] }}",
                    "rightValue": "",
                    "operator": {
                      "type": "object",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Image"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b5bdd3a8-e891-4dd8-bc5b-26f98b1f07b7",
                    "leftValue": "={{ $json.message.voice.mime_type }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEmpty",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Audio"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "cc9db25f-b0c8-4da4-9f42-50843afc21c9"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        80,
        -816
      ],
      "id": "941b9952-6d1c-424c-b47b-befdb7acbae7",
      "name": "Switch"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -128,
        -800
      ],
      "id": "aff9e7bf-8d44-4b0b-b850-fcc050b465bb",
      "name": "Telegram Trigger",
      "webhookId": "84f6383b-baaa-41a6-bf20-036090056ba6",
      "credentials": {
        "telegramApi": {
          "id": "a2evPvtb90xD0E1U",
          "name": "finances-tracker-bot"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.file_id}}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        912,
        -272
      ],
      "id": "14224823-fecc-483a-b885-2d466f091fb9",
      "name": "Get a file",
      "webhookId": "38ccb7de-2d70-437e-af7e-012e2dc2b9aa",
      "credentials": {
        "telegramApi": {
          "id": "a2evPvtb90xD0E1U",
          "name": "finances-tracker-bot"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "54905e10-87ca-4b3e-a454-da6809b8ed37",
              "leftValue": "={{ $json.result.file_path }}",
              "rightValue": ".jpg",
              "operator": {
                "type": "string",
                "operation": "endsWith"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1088,
        -272
      ],
      "id": "08bb56e6-28dd-420d-abba-4a49372fb641",
      "name": "If"
    },
    {
      "parameters": {
        "resource": "image",
        "operation": "analyze",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-1.5-pro-latest",
          "mode": "list",
          "cachedResultName": "models/gemini-1.5-pro-latest"
        },
        "text": "=You are a Multimodal Financial Data Analyzer, Forecaster & Advisor AI.\n\n** Instructions\n\nAnalyze financial information provided by the user. The data will come in the form of images (receipts, invoices, product labels)\n\n** Your responsibilities:\n\nIdentify transaction details\n  -Product/Service name\n  -The exact Amount\n  -Category (e.g., Food, Transportation, Utilities, Business, Entertainment, etc.)\n\nüîë If any field cannot be determined or if the data is empty, leave it blank. Do not make assumptions.",
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1536,
        -400
      ],
      "id": "93d89eed-10a3-4f34-a2f6-1c4033edbc6d",
      "name": "Analyze image",
      "credentials": {
        "googlePalmApi": {
          "id": "mIrJ98CgFb65gdoE",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "db6b30b5-a420-430b-87ae-a4887bfe9628",
              "name": "binary_key",
              "type": "string",
              "value": "={{ Object.keys($binary).first() }}"
            },
            {
              "id": "8e1643f7-e794-43b2-a5ac-80b6b621b547",
              "name": "Mime Type",
              "type": "string",
              "value": "audio/ogg"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "682965cb-ffa6-41e3-a8ea-a7c0a84fd795",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "SET OUTPUT FILE NAME",
      "type": "n8n-nodes-base.set",
      "creator": "Lucas Peyrin",
      "position": [
        1536,
        -176
      ],
      "typeVersion": 3.4,
      "notes": "¬© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "binaryPropertyName": "={{ Object.keys($binary).first() }}",
        "options": {}
      },
      "id": "1a5c7551-7428-4353-b17b-62db67526108",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "creator": "Lucas Peyrin",
      "position": [
        1760,
        -176
      ],
      "typeVersion": 1,
      "notes": "¬© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "jsCode": "const myBuffer = Buffer.from($json.data, 'base64');\n\n$input.item.binary = {\n  [$('SET OUTPUT FILE NAME').last().json.binary_key]: await this.helpers.prepareBinaryData(myBuffer, $('SET OUTPUT FILE NAME').last().json.output_file_name)\n};\n\nreturn $input.item;\n"
      },
      "id": "11fc5141-09c6-4dca-a692-88512386ebb7",
      "cid": "Ikx1Y2FzIFBleXJpbiI",
      "name": "Change Binary Data Type",
      "type": "n8n-nodes-base.code",
      "creator": "Lucas Peyrin",
      "position": [
        1952,
        -176
      ],
      "typeVersion": 2,
      "notes": "¬© 2025 Lucas Peyrin"
    },
    {
      "parameters": {
        "resource": "audio",
        "modelId": {
          "__rl": true,
          "value": "models/gemini-1.5-pro-latest",
          "mode": "list",
          "cachedResultName": "models/gemini-1.5-pro-latest"
        },
        "inputType": "binary",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        2160,
        -176
      ],
      "id": "ec30e409-2e17-4ab1-a56e-d621427c63b4",
      "name": "Transcribe a recording",
      "credentials": {
        "googlePalmApi": {
          "id": "mIrJ98CgFb65gdoE",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output[0] }}",
        "options": {
          "systemMessage": "=You are a Multimodal Financial Data Analyzer, Forecaster & Advisor AI.\n\n** Instructions\n\nAnalyze financial information provided by the user. The data may come in the form of text, images (receipts, invoices, product labels), or voice messages (spoken descriptions of transactions).\n\n** Your responsibilities:\n\nIdentify transaction details\n  -Product/Service name\n  -Whether it is an Expense or Income\n  -The exact Amount\n  -Money In/Out (added or spent)\n  -Category (e.g., Food, Transportation, Utilities, Business, Entertainment, etc.)\n\nüîë If any field cannot be determined or if the data is empty, leave it blank. Do not make assumptions.\n\nProvide analysis\n  -Short insight about each transaction\n\nSummarize multiple entries\n  -Total Income\n  -Total Expenses\n  -Net Balance\n  -Category Breakdown (totals per category)\n  -If no data is available, leave summary fields empty.\n\nGive recommendations\n  -Savings tips\n  -Suggested spending adjustments (e.g., ‚ÄúCut dining out by 20% to save ‚Ç±500‚Äù)\n  -Income optimization ideas\n  -If no data is available, skip recommendations.\n\nThink Tool Step (Self-Analysis)\n  -Use think tool to review your analysis if it's correct or there is need to re write\n\n** Output Format\n\nFor each entry:\n\n!! Always use \"PHP\" when you are putting a money value in the field\n\nüìÜ Date : {{ $now }}\nüì¶ Product/Service: [Name or blank]\nüßæ Type: [Expense / Income or blank]\nüí∏ Amount: [Value or blank]\nüíµ Money In/Out: [Value or blank]\nüè∑Ô∏è Category: [Category or blank]\nüîç Analysis: [Short insight or blank]\n\nIf multiple entries are provided, add a Summary Section:\n\nüíµ Total Income: [Value or blank]\nüíµ Total Expenses: [Value or blank]\nüíµ Net Balance: [Value or blank]\nCategory Breakdown:\n  -Food: [Value or blank]\n  -Transportation: [Value or blank]\n  -Business: [Value or blank]\n  -Others: [Value or blank]\nüí° Recommendations: [Advice or blank]"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1488,
        -768
      ],
      "id": "9a08158a-9013-4d00-82c4-cdd7d95f99f3",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        1392,
        -576
      ],
      "id": "9a79a33c-1642-47bd-be86-f7f0cfc0a60d",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "mIrJ98CgFb65gdoE",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "query",
              "type": "any"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -128,
        -272
      ],
      "id": "622f7ddd-4507-4fea-b59e-b8e957fc50ed",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "8d0d0b6a-af89-46da-b00d-de5dd9768f2b",
              "leftValue": "={{ $json.photo }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        336,
        -272
      ],
      "id": "eb57fe15-d9dc-48f3-acee-995fdb3d49e7",
      "name": "If1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0fd82799-d2bc-4a8e-9aa1-765a2d36bfde",
              "name": "file_id",
              "value": "={{ $json.photo[$json.photo.length - 1].file_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        608,
        -336
      ],
      "id": "6282e010-1b67-4537-bbf0-753fd5701516",
      "name": "edit-image"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2f600a34-438d-440e-bfc5-bc2122857885",
              "name": "file_id",
              "value": "={{ $json.voice.file_id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        608,
        -192
      ],
      "id": "29e6ee90-eaae-47e0-9cc3-1608f7e90a45",
      "name": "edit-audio"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "JtmRId4nck23Lrr3",
          "mode": "list",
          "cachedResultName": "finances-tracker"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "query": "={{ $json.query }}"
          },
          "matchingColumns": [
            "query"
          ],
          "schema": [
            {
              "id": "query",
              "displayName": "query",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        656,
        -992
      ],
      "id": "ef2308ad-004f-47b8-8151-35255eb4eac8",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "00ac0398-5b75-49cd-9582-fbf203bce59c",
              "name": "output",
              "value": "={{ $json.content.parts[0].text }}",
              "type": "string"
            },
            {
              "id": "9b309e05-b1a6-4109-9430-58decd795def",
              "name": "chat_id",
              "value": "={{ $('Telegram Trigger').item.json.message.from.id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        864,
        -992
      ],
      "id": "b8558f50-92f3-44ba-9482-c102d8321174",
      "name": "edit-prompt-output"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "470ad964-b601-4bb0-b4b3-287b900615a7",
              "name": "output",
              "value": "={{ $json.message.text }}",
              "type": "string"
            },
            {
              "id": "2e42dfef-cf02-47b1-8ea2-b28b5ef6b61a",
              "name": "chat_id",
              "value": "={{ $json.message.from.id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        656,
        -768
      ],
      "id": "a6dbc701-b56a-41f6-8bb1-d78d92adef42",
      "name": "edit-text-output"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "02601703-aa0f-42bb-9714-a12ab6e4950c",
              "name": "query",
              "value": "={{ $json.message }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        432,
        -992
      ],
      "id": "2860e0fe-c916-44d8-8c82-a1fe725ddf93",
      "name": "convert-json-to-string"
    },
    {
      "parameters": {
        "jsCode": "return {\n  json: JSON.parse($input.first().json.query)\n};"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        128,
        -272
      ],
      "id": "9535a7a7-0eb1-4ea3-8ee9-c31a68f4bea9",
      "name": "convert-string-to-json"
    },
    {
      "parameters": {
        "chatId": "={{ $('Aggregate').item.json.chat_id[0] }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1856,
        -768
      ],
      "id": "4d9e2a4a-edf5-4fbf-a7df-9741d808b2f7",
      "name": "Send a text message",
      "webhookId": "057199d0-f28b-449b-98bb-c430f61394b1",
      "credentials": {
        "telegramApi": {
          "id": "a2evPvtb90xD0E1U",
          "name": "finances-tracker-bot"
        }
      }
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "chat_id"
            },
            {
              "fieldToAggregate": "output"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1104,
        -768
      ],
      "id": "9a42482f-271d-4386-bc12-1499a35dfd5a",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "description": "=You are the Think Tool Reviewer AI. Your role is to analyze the output generated by the Financial Data Analyzer AI and provide a short reflection.\n\n** Instructions\n\nCheck Completeness\n  -Verify if all required fields are present (Product/Service, Type, Amount, Money In/Out, Category, Analysis, Summary, Forecast, Recommendations).\n  -If some fields are missing, confirm that they are left blank (not guessed).\n\nCheck Consistency\n  -Ensure expenses/incomes align with the amounts and money flow (e.g., Expenses should decrease balance, Income should increase balance).\n  -Confirm categories make sense for the product/service.\n\nExplain What the Output Does\n  -In plain words, describe what the output is giving to the user (e.g., ‚ÄúThis report summarizes all transactions, calculates totals, forecasts spending, and suggests savings strategies‚Äù).\n\nSuggest Adjustments (If Needed)\n  -Point out any issues or improvements in clarity, accuracy, or structure."
      },
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1.1,
      "position": [
        1696,
        -560
      ],
      "id": "73ebcc61-06ca-4a69-b4b5-c933ad64378e",
      "name": "Think"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "convert-json-to-string",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "convert-json-to-string",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "edit-text-output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Analyze image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SET OUTPUT FILE NAME",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SET OUTPUT FILE NAME": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "Change Binary Data Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Change Binary Data Type": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "convert-string-to-json",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Analyze image": {
      "main": [
        []
      ]
    },
    "edit-image": {
      "main": [
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "edit-audio": {
      "main": [
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "edit-image",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "edit-audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "edit-prompt-output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "edit-prompt-output": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "edit-text-output": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert-json-to-string": {
      "main": [
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "convert-string-to-json": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d0ae018d-4124-4c46-97a4-545f85a4b383",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "0ee61e31976bab960ad9c7520cd8a7607714b99359a41f3052f616685d6a73b2"
  },
  "id": "JtmRId4nck23Lrr3",
  "tags": [
    {
      "createdAt": "2025-07-24T19:11:59.077Z",
      "updatedAt": "2025-07-24T19:11:59.077Z",
      "id": "UQcHjDag2th3XCDW",
      "name": "telegram"
    }
  ]
}